//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Agency_Servis.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class AgencijaEntities : DbContext
    {
        public AgencijaEntities()
            : base("name=AgencijaEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Adrese> Adrese { get; set; }
        public DbSet<Drzave> Drzave { get; set; }
        public DbSet<Klijenti> Klijenti { get; set; }
        public DbSet<Korisnici> Korisnici { get; set; }
        public DbSet<KorisniciUloge> KorisniciUloge { get; set; }
        public DbSet<Mjesta> Mjesta { get; set; }
        public DbSet<OcjenaUsluge> OcjenaUsluge { get; set; }
        public DbSet<Osobe> Osobe { get; set; }
        public DbSet<Racuni> Racuni { get; set; }
        public DbSet<Radnici> Radnici { get; set; }
        public DbSet<Rezervacija> Rezervacija { get; set; }
        public DbSet<SkolskaSprema> SkolskaSprema { get; set; }
        public DbSet<StavkeRezervacije> StavkeRezervacije { get; set; }
        public DbSet<Struka> Struka { get; set; }
        public DbSet<TipAktivnosti> TipAktivnosti { get; set; }
        public DbSet<Uloge> Uloge { get; set; }
    
        public virtual ObjectResult<Nullable<decimal>> esp_KorisniciInsert(string ime, string prezime, string email, string telefon, string korisnickoIme, string lozinkaSalt, string lozinkaHash, Nullable<int> mjestoId, string ulicaIBroj)
        {
            var imeParameter = ime != null ?
                new ObjectParameter("Ime", ime) :
                new ObjectParameter("Ime", typeof(string));
    
            var prezimeParameter = prezime != null ?
                new ObjectParameter("Prezime", prezime) :
                new ObjectParameter("Prezime", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var telefonParameter = telefon != null ?
                new ObjectParameter("Telefon", telefon) :
                new ObjectParameter("Telefon", typeof(string));
    
            var korisnickoImeParameter = korisnickoIme != null ?
                new ObjectParameter("KorisnickoIme", korisnickoIme) :
                new ObjectParameter("KorisnickoIme", typeof(string));
    
            var lozinkaSaltParameter = lozinkaSalt != null ?
                new ObjectParameter("LozinkaSalt", lozinkaSalt) :
                new ObjectParameter("LozinkaSalt", typeof(string));
    
            var lozinkaHashParameter = lozinkaHash != null ?
                new ObjectParameter("LozinkaHash", lozinkaHash) :
                new ObjectParameter("LozinkaHash", typeof(string));
    
            var mjestoIdParameter = mjestoId.HasValue ?
                new ObjectParameter("MjestoId", mjestoId) :
                new ObjectParameter("MjestoId", typeof(int));
    
            var ulicaIBrojParameter = ulicaIBroj != null ?
                new ObjectParameter("UlicaIBroj", ulicaIBroj) :
                new ObjectParameter("UlicaIBroj", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("esp_KorisniciInsert", imeParameter, prezimeParameter, emailParameter, telefonParameter, korisnickoImeParameter, lozinkaSaltParameter, lozinkaHashParameter, mjestoIdParameter, ulicaIBrojParameter);
        }
    
        public virtual int esp_KorisniciUlogeDelete(Nullable<int> korisnikID)
        {
            var korisnikIDParameter = korisnikID.HasValue ?
                new ObjectParameter("KorisnikID", korisnikID) :
                new ObjectParameter("KorisnikID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_KorisniciUlogeDelete", korisnikIDParameter);
        }
    
        public virtual int esp_KorisniciUlogeInsert(Nullable<int> korisnikId, Nullable<int> ulogaId)
        {
            var korisnikIdParameter = korisnikId.HasValue ?
                new ObjectParameter("KorisnikId", korisnikId) :
                new ObjectParameter("KorisnikId", typeof(int));
    
            var ulogaIdParameter = ulogaId.HasValue ?
                new ObjectParameter("UlogaId", ulogaId) :
                new ObjectParameter("UlogaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_KorisniciUlogeInsert", korisnikIdParameter, ulogaIdParameter);
        }
    
        public virtual ObjectResult<Uloge> esp_UlogeSelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Uloge>("esp_UlogeSelectAll");
        }
    
        public virtual ObjectResult<Uloge> esp_UlogeSelectAll(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Uloge>("esp_UlogeSelectAll", mergeOption);
        }
    
        public virtual ObjectResult<Mjesta> esp_MjestaSelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Mjesta>("esp_MjestaSelectAll");
        }
    
        public virtual ObjectResult<Mjesta> esp_MjestaSelectAll(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Mjesta>("esp_MjestaSelectAll", mergeOption);
        }
    
        public virtual ObjectResult<Korisnici> esp_KorisniciSelectByKorisnickoIme(string korisnickoIme)
        {
            var korisnickoImeParameter = korisnickoIme != null ?
                new ObjectParameter("KorisnickoIme", korisnickoIme) :
                new ObjectParameter("KorisnickoIme", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Korisnici>("esp_KorisniciSelectByKorisnickoIme", korisnickoImeParameter);
        }
    
        public virtual ObjectResult<Korisnici> esp_KorisniciSelectByKorisnickoIme(string korisnickoIme, MergeOption mergeOption)
        {
            var korisnickoImeParameter = korisnickoIme != null ?
                new ObjectParameter("KorisnickoIme", korisnickoIme) :
                new ObjectParameter("KorisnickoIme", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Korisnici>("esp_KorisniciSelectByKorisnickoIme", mergeOption, korisnickoImeParameter);
        }
    
        public virtual ObjectResult<Uloge> esp_KorisniciUlogeSelectByKorisnik(Nullable<int> korisnikID)
        {
            var korisnikIDParameter = korisnikID.HasValue ?
                new ObjectParameter("KorisnikID", korisnikID) :
                new ObjectParameter("KorisnikID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Uloge>("esp_KorisniciUlogeSelectByKorisnik", korisnikIDParameter);
        }
    
        public virtual ObjectResult<Uloge> esp_KorisniciUlogeSelectByKorisnik(Nullable<int> korisnikID, MergeOption mergeOption)
        {
            var korisnikIDParameter = korisnikID.HasValue ?
                new ObjectParameter("KorisnikID", korisnikID) :
                new ObjectParameter("KorisnikID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Uloge>("esp_KorisniciUlogeSelectByKorisnik", mergeOption, korisnikIDParameter);
        }
    
        public virtual ObjectResult<esp_KorisniciSelectByName_Result> esp_KorisniciSelectByName(string imeIPrezime)
        {
            var imeIPrezimeParameter = imeIPrezime != null ?
                new ObjectParameter("ImeIPrezime", imeIPrezime) :
                new ObjectParameter("ImeIPrezime", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_KorisniciSelectByName_Result>("esp_KorisniciSelectByName", imeIPrezimeParameter);
        }
    
        public virtual int esp_KorisniciUpdateStatus(Nullable<int> korisnikID, Nullable<bool> statusNaSistemu)
        {
            var korisnikIDParameter = korisnikID.HasValue ?
                new ObjectParameter("KorisnikID", korisnikID) :
                new ObjectParameter("KorisnikID", typeof(int));
    
            var statusNaSistemuParameter = statusNaSistemu.HasValue ?
                new ObjectParameter("StatusNaSistemu", statusNaSistemu) :
                new ObjectParameter("StatusNaSistemu", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_KorisniciUpdateStatus", korisnikIDParameter, statusNaSistemuParameter);
        }
    
        public virtual ObjectResult<Korisnici> esp_KorisniciSelectById(Nullable<int> korisnikID)
        {
            var korisnikIDParameter = korisnikID.HasValue ?
                new ObjectParameter("KorisnikID", korisnikID) :
                new ObjectParameter("KorisnikID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Korisnici>("esp_KorisniciSelectById", korisnikIDParameter);
        }
    
        public virtual ObjectResult<Korisnici> esp_KorisniciSelectById(Nullable<int> korisnikID, MergeOption mergeOption)
        {
            var korisnikIDParameter = korisnikID.HasValue ?
                new ObjectParameter("KorisnikID", korisnikID) :
                new ObjectParameter("KorisnikID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Korisnici>("esp_KorisniciSelectById", mergeOption, korisnikIDParameter);
        }
    
        public virtual ObjectResult<Osobe> esp_OsobeSelectByKorisnikID(Nullable<int> korisnikId)
        {
            var korisnikIdParameter = korisnikId.HasValue ?
                new ObjectParameter("KorisnikId", korisnikId) :
                new ObjectParameter("KorisnikId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Osobe>("esp_OsobeSelectByKorisnikID", korisnikIdParameter);
        }
    
        public virtual ObjectResult<Osobe> esp_OsobeSelectByKorisnikID(Nullable<int> korisnikId, MergeOption mergeOption)
        {
            var korisnikIdParameter = korisnikId.HasValue ?
                new ObjectParameter("KorisnikId", korisnikId) :
                new ObjectParameter("KorisnikId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Osobe>("esp_OsobeSelectByKorisnikID", mergeOption, korisnikIdParameter);
        }
    
        public virtual int esp_KorisniciResetPass(Nullable<int> korisnikID, string lozinkaSalt, string lozinkaHash)
        {
            var korisnikIDParameter = korisnikID.HasValue ?
                new ObjectParameter("KorisnikID", korisnikID) :
                new ObjectParameter("KorisnikID", typeof(int));
    
            var lozinkaSaltParameter = lozinkaSalt != null ?
                new ObjectParameter("LozinkaSalt", lozinkaSalt) :
                new ObjectParameter("LozinkaSalt", typeof(string));
    
            var lozinkaHashParameter = lozinkaHash != null ?
                new ObjectParameter("LozinkaHash", lozinkaHash) :
                new ObjectParameter("LozinkaHash", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_KorisniciResetPass", korisnikIDParameter, lozinkaSaltParameter, lozinkaHashParameter);
        }
    
        public virtual int esp_SkolskaSpremaInsert(string naziv)
        {
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_SkolskaSpremaInsert", nazivParameter);
        }
    
        public virtual int esp_StrukaInsert(string naziv)
        {
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_StrukaInsert", nazivParameter);
        }
    
        public virtual int esp_UlogeInsert(string naziv)
        {
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_UlogeInsert", nazivParameter);
        }
    
        public virtual int esp_KlijentiInsert(string naziv, string telefon, string email, string ulicaIBroj, Nullable<int> mjestoID, Nullable<int> tipAktivnostiId, string korisnickoIme, string lozinkaSalt, string lozinkaHash)
        {
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var telefonParameter = telefon != null ?
                new ObjectParameter("Telefon", telefon) :
                new ObjectParameter("Telefon", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var ulicaIBrojParameter = ulicaIBroj != null ?
                new ObjectParameter("UlicaIBroj", ulicaIBroj) :
                new ObjectParameter("UlicaIBroj", typeof(string));
    
            var mjestoIDParameter = mjestoID.HasValue ?
                new ObjectParameter("MjestoID", mjestoID) :
                new ObjectParameter("MjestoID", typeof(int));
    
            var tipAktivnostiIdParameter = tipAktivnostiId.HasValue ?
                new ObjectParameter("TipAktivnostiId", tipAktivnostiId) :
                new ObjectParameter("TipAktivnostiId", typeof(int));
    
            var korisnickoImeParameter = korisnickoIme != null ?
                new ObjectParameter("KorisnickoIme", korisnickoIme) :
                new ObjectParameter("KorisnickoIme", typeof(string));
    
            var lozinkaSaltParameter = lozinkaSalt != null ?
                new ObjectParameter("LozinkaSalt", lozinkaSalt) :
                new ObjectParameter("LozinkaSalt", typeof(string));
    
            var lozinkaHashParameter = lozinkaHash != null ?
                new ObjectParameter("LozinkaHash", lozinkaHash) :
                new ObjectParameter("LozinkaHash", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_KlijentiInsert", nazivParameter, telefonParameter, emailParameter, ulicaIBrojParameter, mjestoIDParameter, tipAktivnostiIdParameter, korisnickoImeParameter, lozinkaSaltParameter, lozinkaHashParameter);
        }
    
        public virtual ObjectResult<TipAktivnosti> esp_TipAktivnostiSelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TipAktivnosti>("esp_TipAktivnostiSelectAll");
        }
    
        public virtual ObjectResult<TipAktivnosti> esp_TipAktivnostiSelectAll(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TipAktivnosti>("esp_TipAktivnostiSelectAll", mergeOption);
        }
    
        public virtual ObjectResult<esp_KlijentiSelectAllByNaziv_Result> esp_KlijentiSelectAllByNaziv(string naziv)
        {
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_KlijentiSelectAllByNaziv_Result>("esp_KlijentiSelectAllByNaziv", nazivParameter);
        }
    
        public virtual int esp_KlijentiUpdateLicnihPodataka(string naziv, string telefon, string email, string ulicaIBroj, Nullable<int> mjestoId)
        {
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var telefonParameter = telefon != null ?
                new ObjectParameter("Telefon", telefon) :
                new ObjectParameter("Telefon", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var ulicaIBrojParameter = ulicaIBroj != null ?
                new ObjectParameter("UlicaIBroj", ulicaIBroj) :
                new ObjectParameter("UlicaIBroj", typeof(string));
    
            var mjestoIdParameter = mjestoId.HasValue ?
                new ObjectParameter("MjestoId", mjestoId) :
                new ObjectParameter("MjestoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_KlijentiUpdateLicnihPodataka", nazivParameter, telefonParameter, emailParameter, ulicaIBrojParameter, mjestoIdParameter);
        }
    
        public virtual int esp_KlijentiChangeUsername(string naziv, string korisnickoIme)
        {
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var korisnickoImeParameter = korisnickoIme != null ?
                new ObjectParameter("KorisnickoIme", korisnickoIme) :
                new ObjectParameter("KorisnickoIme", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_KlijentiChangeUsername", nazivParameter, korisnickoImeParameter);
        }
    
        public virtual int esp_KlijentiResetPass(string naziv, string lozinkaSalt, string lozinkaHash)
        {
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var lozinkaSaltParameter = lozinkaSalt != null ?
                new ObjectParameter("LozinkaSalt", lozinkaSalt) :
                new ObjectParameter("LozinkaSalt", typeof(string));
    
            var lozinkaHashParameter = lozinkaHash != null ?
                new ObjectParameter("LozinkaHash", lozinkaHash) :
                new ObjectParameter("LozinkaHash", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_KlijentiResetPass", nazivParameter, lozinkaSaltParameter, lozinkaHashParameter);
        }
    
        public virtual ObjectResult<SkolskaSprema> esp_SkolskaSpremaSelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SkolskaSprema>("esp_SkolskaSpremaSelectAll");
        }
    
        public virtual ObjectResult<SkolskaSprema> esp_SkolskaSpremaSelectAll(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SkolskaSprema>("esp_SkolskaSpremaSelectAll", mergeOption);
        }
    
        public virtual ObjectResult<Struka> esp_StrukaSelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Struka>("esp_StrukaSelectAll");
        }
    
        public virtual ObjectResult<Struka> esp_StrukaSelectAll(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Struka>("esp_StrukaSelectAll", mergeOption);
        }
    
        public virtual int esp_RadniciInsert(string ime, string prezime, string jMBG, string ulicaIBroj, Nullable<int> mjestoId, string email, string telefon, Nullable<int> strukaId, Nullable<int> skolskaSpremaId, Nullable<decimal> cijenaPoSatu)
        {
            var imeParameter = ime != null ?
                new ObjectParameter("Ime", ime) :
                new ObjectParameter("Ime", typeof(string));
    
            var prezimeParameter = prezime != null ?
                new ObjectParameter("Prezime", prezime) :
                new ObjectParameter("Prezime", typeof(string));
    
            var jMBGParameter = jMBG != null ?
                new ObjectParameter("JMBG", jMBG) :
                new ObjectParameter("JMBG", typeof(string));
    
            var ulicaIBrojParameter = ulicaIBroj != null ?
                new ObjectParameter("UlicaIBroj", ulicaIBroj) :
                new ObjectParameter("UlicaIBroj", typeof(string));
    
            var mjestoIdParameter = mjestoId.HasValue ?
                new ObjectParameter("MjestoId", mjestoId) :
                new ObjectParameter("MjestoId", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var telefonParameter = telefon != null ?
                new ObjectParameter("Telefon", telefon) :
                new ObjectParameter("Telefon", typeof(string));
    
            var strukaIdParameter = strukaId.HasValue ?
                new ObjectParameter("StrukaId", strukaId) :
                new ObjectParameter("StrukaId", typeof(int));
    
            var skolskaSpremaIdParameter = skolskaSpremaId.HasValue ?
                new ObjectParameter("SkolskaSpremaId", skolskaSpremaId) :
                new ObjectParameter("SkolskaSpremaId", typeof(int));
    
            var cijenaPoSatuParameter = cijenaPoSatu.HasValue ?
                new ObjectParameter("CijenaPoSatu", cijenaPoSatu) :
                new ObjectParameter("CijenaPoSatu", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_RadniciInsert", imeParameter, prezimeParameter, jMBGParameter, ulicaIBrojParameter, mjestoIdParameter, emailParameter, telefonParameter, strukaIdParameter, skolskaSpremaIdParameter, cijenaPoSatuParameter);
        }
    
        public virtual ObjectResult<esp_RadniciOsobeSelectByName_ToUpdate_Result> esp_RadniciOsobeSelectByName_ToUpdate(string imeIPrezime)
        {
            var imeIPrezimeParameter = imeIPrezime != null ?
                new ObjectParameter("ImeIPrezime", imeIPrezime) :
                new ObjectParameter("ImeIPrezime", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_RadniciOsobeSelectByName_ToUpdate_Result>("esp_RadniciOsobeSelectByName_ToUpdate", imeIPrezimeParameter);
        }
    
        public virtual ObjectResult<esp_RadniciOsobeSelectById_ToUpdate_Result> esp_RadniciOsobeSelectById_ToUpdate(Nullable<int> radnikId)
        {
            var radnikIdParameter = radnikId.HasValue ?
                new ObjectParameter("RadnikId", radnikId) :
                new ObjectParameter("RadnikId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_RadniciOsobeSelectById_ToUpdate_Result>("esp_RadniciOsobeSelectById_ToUpdate", radnikIdParameter);
        }
    
        public virtual int esp_RadniciUpdateStatus(Nullable<int> radnikID, Nullable<bool> status)
        {
            var radnikIDParameter = radnikID.HasValue ?
                new ObjectParameter("RadnikID", radnikID) :
                new ObjectParameter("RadnikID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_RadniciUpdateStatus", radnikIDParameter, statusParameter);
        }
    
        public virtual ObjectResult<Radnici> esp_RadniciSelectByID(Nullable<int> radnikID)
        {
            var radnikIDParameter = radnikID.HasValue ?
                new ObjectParameter("RadnikID", radnikID) :
                new ObjectParameter("RadnikID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Radnici>("esp_RadniciSelectByID", radnikIDParameter);
        }
    
        public virtual ObjectResult<Radnici> esp_RadniciSelectByID(Nullable<int> radnikID, MergeOption mergeOption)
        {
            var radnikIDParameter = radnikID.HasValue ?
                new ObjectParameter("RadnikID", radnikID) :
                new ObjectParameter("RadnikID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Radnici>("esp_RadniciSelectByID", mergeOption, radnikIDParameter);
        }
    
        public virtual int esp_RadniciUpdateOsnovnihPodataka(Nullable<int> osobaId, Nullable<int> radnikId, string telefon, string email, Nullable<decimal> cijenaPoSatu)
        {
            var osobaIdParameter = osobaId.HasValue ?
                new ObjectParameter("OsobaId", osobaId) :
                new ObjectParameter("OsobaId", typeof(int));
    
            var radnikIdParameter = radnikId.HasValue ?
                new ObjectParameter("RadnikId", radnikId) :
                new ObjectParameter("RadnikId", typeof(int));
    
            var telefonParameter = telefon != null ?
                new ObjectParameter("Telefon", telefon) :
                new ObjectParameter("Telefon", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var cijenaPoSatuParameter = cijenaPoSatu.HasValue ?
                new ObjectParameter("CijenaPoSatu", cijenaPoSatu) :
                new ObjectParameter("CijenaPoSatu", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_RadniciUpdateOsnovnihPodataka", osobaIdParameter, radnikIdParameter, telefonParameter, emailParameter, cijenaPoSatuParameter);
        }
    
        public virtual ObjectResult<esp_RadniciOsobeSelectAll_Result> esp_RadniciOsobeSelectAll(Nullable<int> radnikId)
        {
            var radnikIdParameter = radnikId.HasValue ?
                new ObjectParameter("RadnikId", radnikId) :
                new ObjectParameter("RadnikId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_RadniciOsobeSelectAll_Result>("esp_RadniciOsobeSelectAll", radnikIdParameter);
        }
    
        public virtual ObjectResult<esp_StrukeSelect_Result> esp_StrukeSelect()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_StrukeSelect_Result>("esp_StrukeSelect");
        }
    
        public virtual ObjectResult<esp_RadniciSelectByStrukaNaziv_Result> esp_RadniciSelectByStrukaNaziv(string strukaNaziv)
        {
            var strukaNazivParameter = strukaNaziv != null ?
                new ObjectParameter("StrukaNaziv", strukaNaziv) :
                new ObjectParameter("StrukaNaziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_RadniciSelectByStrukaNaziv_Result>("esp_RadniciSelectByStrukaNaziv", strukaNazivParameter);
        }
    
        public virtual ObjectResult<StavkeRezervacije> esp_StavkeRezervacijeSelectByRadnikID(Nullable<int> radnikID)
        {
            var radnikIDParameter = radnikID.HasValue ?
                new ObjectParameter("RadnikID", radnikID) :
                new ObjectParameter("RadnikID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<StavkeRezervacije>("esp_StavkeRezervacijeSelectByRadnikID", radnikIDParameter);
        }
    
        public virtual ObjectResult<StavkeRezervacije> esp_StavkeRezervacijeSelectByRadnikID(Nullable<int> radnikID, MergeOption mergeOption)
        {
            var radnikIDParameter = radnikID.HasValue ?
                new ObjectParameter("RadnikID", radnikID) :
                new ObjectParameter("RadnikID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<StavkeRezervacije>("esp_StavkeRezervacijeSelectByRadnikID", mergeOption, radnikIDParameter);
        }
    
        public virtual ObjectResult<Klijenti> esp_KlijentiSelect()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Klijenti>("esp_KlijentiSelect");
        }
    
        public virtual ObjectResult<Klijenti> esp_KlijentiSelect(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Klijenti>("esp_KlijentiSelect", mergeOption);
        }
    
        public virtual int esp_RezervacijaCreate(Nullable<int> klijentId, Nullable<int> radnikId, Nullable<System.DateTime> datumRezervacije, Nullable<System.DateTime> datumPocetka, Nullable<System.DateTime> datumZavrsetka, Nullable<int> brojRadnihSati)
        {
            var klijentIdParameter = klijentId.HasValue ?
                new ObjectParameter("KlijentId", klijentId) :
                new ObjectParameter("KlijentId", typeof(int));
    
            var radnikIdParameter = radnikId.HasValue ?
                new ObjectParameter("RadnikId", radnikId) :
                new ObjectParameter("RadnikId", typeof(int));
    
            var datumRezervacijeParameter = datumRezervacije.HasValue ?
                new ObjectParameter("DatumRezervacije", datumRezervacije) :
                new ObjectParameter("DatumRezervacije", typeof(System.DateTime));
    
            var datumPocetkaParameter = datumPocetka.HasValue ?
                new ObjectParameter("DatumPocetka", datumPocetka) :
                new ObjectParameter("DatumPocetka", typeof(System.DateTime));
    
            var datumZavrsetkaParameter = datumZavrsetka.HasValue ?
                new ObjectParameter("DatumZavrsetka", datumZavrsetka) :
                new ObjectParameter("DatumZavrsetka", typeof(System.DateTime));
    
            var brojRadnihSatiParameter = brojRadnihSati.HasValue ?
                new ObjectParameter("BrojRadnihSati", brojRadnihSati) :
                new ObjectParameter("BrojRadnihSati", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_RezervacijaCreate", klijentIdParameter, radnikIdParameter, datumRezervacijeParameter, datumPocetkaParameter, datumZavrsetkaParameter, brojRadnihSatiParameter);
        }
    
        public virtual ObjectResult<esp_RadniciSelectNamesOnly_Result> esp_RadniciSelectNamesOnly()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_RadniciSelectNamesOnly_Result>("esp_RadniciSelectNamesOnly");
        }
    
        public virtual ObjectResult<esp_RadniciRezervacijeByRadnikId_Result> esp_RadniciRezervacijeByRadnikId(Nullable<int> radnikId)
        {
            var radnikIdParameter = radnikId.HasValue ?
                new ObjectParameter("RadnikId", radnikId) :
                new ObjectParameter("RadnikId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_RadniciRezervacijeByRadnikId_Result>("esp_RadniciRezervacijeByRadnikId", radnikIdParameter);
        }
    
        public virtual ObjectResult<esp_RacunSelectDataOnly_Result> esp_RacunSelectDataOnly(Nullable<int> radnikID, Nullable<int> rezervacijaID)
        {
            var radnikIDParameter = radnikID.HasValue ?
                new ObjectParameter("RadnikID", radnikID) :
                new ObjectParameter("RadnikID", typeof(int));
    
            var rezervacijaIDParameter = rezervacijaID.HasValue ?
                new ObjectParameter("RezervacijaID", rezervacijaID) :
                new ObjectParameter("RezervacijaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_RacunSelectDataOnly_Result>("esp_RacunSelectDataOnly", radnikIDParameter, rezervacijaIDParameter);
        }
    
        public virtual ObjectResult<esp_RezervacijeSelectByClientName_Result> esp_RezervacijeSelectByClientName(string naziv)
        {
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_RezervacijeSelectByClientName_Result>("esp_RezervacijeSelectByClientName", nazivParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> esp_RacunInsert(Nullable<int> iznos, Nullable<int> rezervacijaId)
        {
            var iznosParameter = iznos.HasValue ?
                new ObjectParameter("Iznos", iznos) :
                new ObjectParameter("Iznos", typeof(int));
    
            var rezervacijaIdParameter = rezervacijaId.HasValue ?
                new ObjectParameter("RezervacijaId", rezervacijaId) :
                new ObjectParameter("RezervacijaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("esp_RacunInsert", iznosParameter, rezervacijaIdParameter);
        }
    
        public virtual ObjectResult<esp_RacunSelectByClientId_Result> esp_RacunSelectByClientId(Nullable<int> klijentID, Nullable<int> rezervacijaId)
        {
            var klijentIDParameter = klijentID.HasValue ?
                new ObjectParameter("KlijentID", klijentID) :
                new ObjectParameter("KlijentID", typeof(int));
    
            var rezervacijaIdParameter = rezervacijaId.HasValue ?
                new ObjectParameter("RezervacijaId", rezervacijaId) :
                new ObjectParameter("RezervacijaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_RacunSelectByClientId_Result>("esp_RacunSelectByClientId", klijentIDParameter, rezervacijaIdParameter);
        }
    
        public virtual ObjectResult<esp_RezervacijeSelectByKlijentId_Result> esp_RezervacijeSelectByKlijentId(Nullable<int> klijentId)
        {
            var klijentIdParameter = klijentId.HasValue ?
                new ObjectParameter("KlijentId", klijentId) :
                new ObjectParameter("KlijentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_RezervacijeSelectByKlijentId_Result>("esp_RezervacijeSelectByKlijentId", klijentIdParameter);
        }
    
        public virtual ObjectResult<esp_RacunSelectByRezervacijaId_Result> esp_RacunSelectByRezervacijaId(Nullable<int> rezervacijaId)
        {
            var rezervacijaIdParameter = rezervacijaId.HasValue ?
                new ObjectParameter("RezervacijaId", rezervacijaId) :
                new ObjectParameter("RezervacijaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_RacunSelectByRezervacijaId_Result>("esp_RacunSelectByRezervacijaId", rezervacijaIdParameter);
        }
    
        public virtual int esp_OsobeUpdateLicnihPodataka(Nullable<int> osobaId, string ime, string prezime, string email, string telefon, string ulicaIBroj, Nullable<int> mjestoId)
        {
            var osobaIdParameter = osobaId.HasValue ?
                new ObjectParameter("OsobaId", osobaId) :
                new ObjectParameter("OsobaId", typeof(int));
    
            var imeParameter = ime != null ?
                new ObjectParameter("Ime", ime) :
                new ObjectParameter("Ime", typeof(string));
    
            var prezimeParameter = prezime != null ?
                new ObjectParameter("Prezime", prezime) :
                new ObjectParameter("Prezime", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var telefonParameter = telefon != null ?
                new ObjectParameter("Telefon", telefon) :
                new ObjectParameter("Telefon", typeof(string));
    
            var ulicaIBrojParameter = ulicaIBroj != null ?
                new ObjectParameter("UlicaIBroj", ulicaIBroj) :
                new ObjectParameter("UlicaIBroj", typeof(string));
    
            var mjestoIdParameter = mjestoId.HasValue ?
                new ObjectParameter("MjestoId", mjestoId) :
                new ObjectParameter("MjestoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_OsobeUpdateLicnihPodataka", osobaIdParameter, imeParameter, prezimeParameter, emailParameter, telefonParameter, ulicaIBrojParameter, mjestoIdParameter);
        }
    
        public virtual int esp_TipAktivnostiInsert(string naziv)
        {
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_TipAktivnostiInsert", nazivParameter);
        }
    
        public virtual ObjectResult<Uloge> esp_UlogeSelectByKorisnikId(Nullable<int> korisnikId)
        {
            var korisnikIdParameter = korisnikId.HasValue ?
                new ObjectParameter("KorisnikId", korisnikId) :
                new ObjectParameter("KorisnikId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Uloge>("esp_UlogeSelectByKorisnikId", korisnikIdParameter);
        }
    
        public virtual ObjectResult<Uloge> esp_UlogeSelectByKorisnikId(Nullable<int> korisnikId, MergeOption mergeOption)
        {
            var korisnikIdParameter = korisnikId.HasValue ?
                new ObjectParameter("KorisnikId", korisnikId) :
                new ObjectParameter("KorisnikId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Uloge>("esp_UlogeSelectByKorisnikId", mergeOption, korisnikIdParameter);
        }
    
        public virtual ObjectResult<Klijenti> esp_KlijentiSelectToUpdateAccessDataByNaziv(string naziv)
        {
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Klijenti>("esp_KlijentiSelectToUpdateAccessDataByNaziv", nazivParameter);
        }
    
        public virtual ObjectResult<Klijenti> esp_KlijentiSelectToUpdateAccessDataByNaziv(string naziv, MergeOption mergeOption)
        {
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Klijenti>("esp_KlijentiSelectToUpdateAccessDataByNaziv", mergeOption, nazivParameter);
        }
    
        public virtual ObjectResult<esp_web_RadniciSelectByStruka_Result> esp_web_RadniciSelectByStruka(Nullable<int> strukaId, Nullable<int> offset, Nullable<int> maxRows, ObjectParameter totalRows)
        {
            var strukaIdParameter = strukaId.HasValue ?
                new ObjectParameter("StrukaId", strukaId) :
                new ObjectParameter("StrukaId", typeof(int));
    
            var offsetParameter = offset.HasValue ?
                new ObjectParameter("Offset", offset) :
                new ObjectParameter("Offset", typeof(int));
    
            var maxRowsParameter = maxRows.HasValue ?
                new ObjectParameter("MaxRows", maxRows) :
                new ObjectParameter("MaxRows", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_web_RadniciSelectByStruka_Result>("esp_web_RadniciSelectByStruka", strukaIdParameter, offsetParameter, maxRowsParameter, totalRows);
        }
    
        public virtual ObjectResult<esp_web_RadniciSelectByStrukaImeIPrezime_Result> esp_web_RadniciSelectByStrukaImeIPrezime(Nullable<int> strukaId, string imeIPrezime, Nullable<int> offset, Nullable<int> maxRows, ObjectParameter totalRows)
        {
            var strukaIdParameter = strukaId.HasValue ?
                new ObjectParameter("StrukaId", strukaId) :
                new ObjectParameter("StrukaId", typeof(int));
    
            var imeIPrezimeParameter = imeIPrezime != null ?
                new ObjectParameter("ImeIPrezime", imeIPrezime) :
                new ObjectParameter("ImeIPrezime", typeof(string));
    
            var offsetParameter = offset.HasValue ?
                new ObjectParameter("Offset", offset) :
                new ObjectParameter("Offset", typeof(int));
    
            var maxRowsParameter = maxRows.HasValue ?
                new ObjectParameter("MaxRows", maxRows) :
                new ObjectParameter("MaxRows", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_web_RadniciSelectByStrukaImeIPrezime_Result>("esp_web_RadniciSelectByStrukaImeIPrezime", strukaIdParameter, imeIPrezimeParameter, offsetParameter, maxRowsParameter, totalRows);
        }
    
        public virtual int esp_web_KlijentiInsert(string naziv, string email, string ulicaIBroj, Nullable<int> mjestoID, Nullable<int> tipAktivnostiId, string korisnickoIme, string lozinkaSalt, string lozinkaHash)
        {
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var ulicaIBrojParameter = ulicaIBroj != null ?
                new ObjectParameter("UlicaIBroj", ulicaIBroj) :
                new ObjectParameter("UlicaIBroj", typeof(string));
    
            var mjestoIDParameter = mjestoID.HasValue ?
                new ObjectParameter("MjestoID", mjestoID) :
                new ObjectParameter("MjestoID", typeof(int));
    
            var tipAktivnostiIdParameter = tipAktivnostiId.HasValue ?
                new ObjectParameter("TipAktivnostiId", tipAktivnostiId) :
                new ObjectParameter("TipAktivnostiId", typeof(int));
    
            var korisnickoImeParameter = korisnickoIme != null ?
                new ObjectParameter("KorisnickoIme", korisnickoIme) :
                new ObjectParameter("KorisnickoIme", typeof(string));
    
            var lozinkaSaltParameter = lozinkaSalt != null ?
                new ObjectParameter("LozinkaSalt", lozinkaSalt) :
                new ObjectParameter("LozinkaSalt", typeof(string));
    
            var lozinkaHashParameter = lozinkaHash != null ?
                new ObjectParameter("LozinkaHash", lozinkaHash) :
                new ObjectParameter("LozinkaHash", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_web_KlijentiInsert", nazivParameter, emailParameter, ulicaIBrojParameter, mjestoIDParameter, tipAktivnostiIdParameter, korisnickoImeParameter, lozinkaSaltParameter, lozinkaHashParameter);
        }
    
        public virtual ObjectResult<Klijenti> esp_web_KlijentiSelectByKorisnickoIme(string korisnickoIme)
        {
            var korisnickoImeParameter = korisnickoIme != null ?
                new ObjectParameter("KorisnickoIme", korisnickoIme) :
                new ObjectParameter("KorisnickoIme", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Klijenti>("esp_web_KlijentiSelectByKorisnickoIme", korisnickoImeParameter);
        }
    
        public virtual ObjectResult<Klijenti> esp_web_KlijentiSelectByKorisnickoIme(string korisnickoIme, MergeOption mergeOption)
        {
            var korisnickoImeParameter = korisnickoIme != null ?
                new ObjectParameter("KorisnickoIme", korisnickoIme) :
                new ObjectParameter("KorisnickoIme", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Klijenti>("esp_web_KlijentiSelectByKorisnickoIme", mergeOption, korisnickoImeParameter);
        }
    
        public virtual int esp_RezervacijeCancelByRadnikId(Nullable<int> radnikId, Nullable<System.DateTime> datumRezervacije)
        {
            var radnikIdParameter = radnikId.HasValue ?
                new ObjectParameter("RadnikId", radnikId) :
                new ObjectParameter("RadnikId", typeof(int));
    
            var datumRezervacijeParameter = datumRezervacije.HasValue ?
                new ObjectParameter("DatumRezervacije", datumRezervacije) :
                new ObjectParameter("DatumRezervacije", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_RezervacijeCancelByRadnikId", radnikIdParameter, datumRezervacijeParameter);
        }
    
        public virtual ObjectResult<esp_xrp_RezervacijeUPeriodu_Result> esp_xrp_RezervacijeUPeriodu(Nullable<System.DateTime> datumPocetka, Nullable<System.DateTime> datumZavrsetka)
        {
            var datumPocetkaParameter = datumPocetka.HasValue ?
                new ObjectParameter("DatumPocetka", datumPocetka) :
                new ObjectParameter("DatumPocetka", typeof(System.DateTime));
    
            var datumZavrsetkaParameter = datumZavrsetka.HasValue ?
                new ObjectParameter("DatumZavrsetka", datumZavrsetka) :
                new ObjectParameter("DatumZavrsetka", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_xrp_RezervacijeUPeriodu_Result>("esp_xrp_RezervacijeUPeriodu", datumPocetkaParameter, datumZavrsetkaParameter);
        }
    
        public virtual ObjectResult<esp_web_RezervacijaRadniciSelectByKlijentId_Result> esp_web_RezervacijaRadniciSelectByKlijentId(Nullable<int> klijentId)
        {
            var klijentIdParameter = klijentId.HasValue ?
                new ObjectParameter("KlijentId", klijentId) :
                new ObjectParameter("KlijentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_web_RezervacijaRadniciSelectByKlijentId_Result>("esp_web_RezervacijaRadniciSelectByKlijentId", klijentIdParameter);
        }
    
        public virtual int esp_web_OcjeneUslugeInsert(Nullable<int> klijentId, Nullable<int> rezervacijaId, Nullable<int> ocjena, string primjedba, string sugestije)
        {
            var klijentIdParameter = klijentId.HasValue ?
                new ObjectParameter("KlijentId", klijentId) :
                new ObjectParameter("KlijentId", typeof(int));
    
            var rezervacijaIdParameter = rezervacijaId.HasValue ?
                new ObjectParameter("RezervacijaId", rezervacijaId) :
                new ObjectParameter("RezervacijaId", typeof(int));
    
            var ocjenaParameter = ocjena.HasValue ?
                new ObjectParameter("Ocjena", ocjena) :
                new ObjectParameter("Ocjena", typeof(int));
    
            var primjedbaParameter = primjedba != null ?
                new ObjectParameter("Primjedba", primjedba) :
                new ObjectParameter("Primjedba", typeof(string));
    
            var sugestijeParameter = sugestije != null ?
                new ObjectParameter("Sugestije", sugestije) :
                new ObjectParameter("Sugestije", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_web_OcjeneUslugeInsert", klijentIdParameter, rezervacijaIdParameter, ocjenaParameter, primjedbaParameter, sugestijeParameter);
        }
    
        public virtual ObjectResult<esp_xrp_RadniciOsobeSelect_NoArgs_Result> esp_xrp_RadniciOsobeSelect_NoArgs()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_xrp_RadniciOsobeSelect_NoArgs_Result>("esp_xrp_RadniciOsobeSelect_NoArgs");
        }
    
        public virtual ObjectResult<esp_RadniciRezervacijeByRadnikSurName_Result> esp_RadniciRezervacijeByRadnikSurName(string prezime)
        {
            var prezimeParameter = prezime != null ?
                new ObjectParameter("Prezime", prezime) :
                new ObjectParameter("Prezime", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_RadniciRezervacijeByRadnikSurName_Result>("esp_RadniciRezervacijeByRadnikSurName", prezimeParameter);
        }
    
        public virtual ObjectResult<esp_xrp_Racun_SelectByClientId_Result> esp_xrp_Racun_SelectByClientId(Nullable<int> klijentId)
        {
            var klijentIdParameter = klijentId.HasValue ?
                new ObjectParameter("KlijentId", klijentId) :
                new ObjectParameter("KlijentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_xrp_Racun_SelectByClientId_Result>("esp_xrp_Racun_SelectByClientId", klijentIdParameter);
        }
    
        public virtual ObjectResult<esp_web_PreporukaPoOcjeni_Result> esp_web_PreporukaPoOcjeni()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_web_PreporukaPoOcjeni_Result>("esp_web_PreporukaPoOcjeni");
        }
    
        public virtual ObjectResult<esp_web_PreporukaPoStruci_Result> esp_web_PreporukaPoStruci(Nullable<int> strukaId)
        {
            var strukaIdParameter = strukaId.HasValue ?
                new ObjectParameter("StrukaId", strukaId) :
                new ObjectParameter("StrukaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_web_PreporukaPoStruci_Result>("esp_web_PreporukaPoStruci", strukaIdParameter);
        }
    }
}
